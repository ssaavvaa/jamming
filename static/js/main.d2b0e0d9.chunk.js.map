{"version":3,"sources":["Fonts_styles/font_styles.js","util/spotify.js","Reducers/Actions/search_tracks.js","Components/SearchBar/SearchBar.js","Reducers/Actions/setActivePage.js","Components/SearchResults/Recommendations.js","Components/Tracks/SearchTrack.js","Reducers/Actions/addTrackToPlaylist.js","Components/SearchResults/SearchResults.js","Components/Tracks/PlayListTrack.js","Reducers/Actions/removePlaylistTrack.js","Components/Playlist/Playlist.js","Reducers/Actions/delete_playlist.js","Components/CounterAnimation/CounterAnimation.js","App/App.js","serviceWorker.js","Reducers/Tracks.js","Reducers/rootReducer.js","index.js"],"names":["styles","colors","font_main","bg_main","scnd_main","fonts","main","main_wrapper","margin","maxWidth","padding","playListButton","color","this","fontFamily","backgroundColor","searchButton","main_heading","playlist_heading","track_name","track_description","accessToken","accessTokenMatch","window","location","href","match","expiresInMatch","Spotify","getAccessToken","history","pushState","accessUrl","concat","recommendArtists","name","fetch","headers","Authorization","then","response","json","jsonResponse","artists","items","id","length","randomArtists","_loop","i","randomNumber","Math","floor","random","img","images","url","some","x","Object","toConsumableArray","search","term","tracks","map","track","artist","album","uri","savePlaylist","trackUris","userId","playlistId","swal","method","body","JSON","stringify","uris","search_tracks","value","playListTracks","dispatch","filteredResponse","reduce","acc","currValue","responseRec","type","recommendations","SearchBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMouseSearch","bind","assertThisInitialized","onEnterSearch","inputValue","React","createRef","current","localStorage","getItem","query","$","show","setItem","event","keyCode","counter","react_default","a","createElement","react","className","ref","placeholder","onKeyUp","onClick","style","setActivePage","Component","connect","state","page","recommendSearch","scrollTo","top","behavior","setTimeout","key","alt","src","animateAdd","TimelineLite","addTrackToPlayList","trackCover","div","to","scale","rotation","eventCallback","zIndex","SearchResults","hide","searchResults","Tracks_SearchTrack","SearchResults_Recommendations","animateDelete","removePlaylistTrack","playlist_info","css","textAlign","transformOrigin","delete_playlist","playListName","Tracks_PlayListTrack","title","text","icon","buttons","dangerMode","willDelete","timer","CounterAndAnimation","Fragment","App","CSSPlugin","AttrPlugin","addEventListener","scrollTop","fadeIn","fadeOut","Components_SearchBar_SearchBar","activePage","Components_SearchResults_SearchResults","Components_Playlist_Playlist","react_scroll_up_button","CounterAnimation","Boolean","hostname","tracks_state","active_page","rootReducer","combineReducers","arguments","undefined","action","objectSpread","trackToAdd","find","updatedSearchResults","filter","filteredPlaylist","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2b0e0d9.chunk.js","sourcesContent":["export const styles = {\r\n    colors: {\r\n        font_main: \"white\",\r\n        bg_main: \"#222326\",\r\n        scnd_main: \"#1DB954\"\r\n    },\r\n    fonts: {\r\n        main: 'Didact Gothic, sans-serif'\r\n    },\r\n\r\n    main_wrapper: {\r\n        margin: \"0 auto\",\r\n        maxWidth: 1400,\r\n        padding: 20\r\n    },\r\n\r\n    get playListButton() {\r\n        return {\r\n            color: this.colors.font_main,\r\n            fontFamily: this.fonts.main,\r\n            backgroundColor: this.colors.scnd_main\r\n        }\r\n    },\r\n    get searchButton() {\r\n        return {\r\n            color: this.colors.font_main,\r\n            fontFamily: this.fonts.main,\r\n            backgroundColor: this.colors.bg_main\r\n        }\r\n    },\r\n\r\n    get main_heading() {\r\n        return {\r\n          \r\n            fontFamily: this.fonts.main\r\n        }\r\n    },\r\n\r\n    get playlist_heading() {\r\n        return {\r\n            fontFamily: this.fonts.main,\r\n            color: this.colors.scnd_main\r\n        }\r\n    },\r\n\r\n    get track_name() {\r\n        return {\r\n            fontFamily: this.fonts.main,\r\n            color: this.colors.scnd_main\r\n        }\r\n    },\r\n\r\n    get track_description() {\r\n        return {\r\n            fontFamily: this.fonts.main,\r\n            color: this.colors.font_main\r\n        }\r\n    }\r\n\r\n\r\n}","import swal from 'sweetalert';\r\nconst clientId = 'b2c5900815984920b0af23be399fbd54'; // Insert client ID here.\r\nconst redirectUri = 'http://localhost:3000'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\r\nconst accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\nconst expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\nlet accessToken;\r\n\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    } else if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      window.history.pushState('Access Token', null, '/');\r\n      return accessToken\r\n    } else {\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl\r\n    }\r\n  },\r\n\r\n\r\n  recommendArtists(name) {\r\n    return fetch(`https://api.spotify.com/v1/search?type=artist&q=${name}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        }\r\n      }).then(response => {\r\n        return response.json();\r\n      })\r\n      .then(jsonResponse => {\r\n        return fetch(`https://api.spotify.com/v1/artists/${jsonResponse.artists.items[0].id}/related-artists`, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          }\r\n        })\r\n      }).then(response => {\r\n        return response.json();\r\n      }).then(jsonResponse => {\r\n        if (!jsonResponse.artists.length) {\r\n          return [];\r\n        }\r\n        let randomArtists = []\r\n        for (let i = 0; i < 6; i += 1) {\r\n          let randomNumber = Math.floor(Math.random() * jsonResponse.artists.length)\r\n          let artists = jsonResponse.artists\r\n          let name = artists[randomNumber].name?artists[randomNumber].name:\"unknown\"\r\n          let img = artists[randomNumber].images[2].url?artists[randomNumber].images[2].url:\"https://static.thenounproject.com/png/340719-200.png\"\r\n          if (!randomArtists.some(x => x.name === name))\r\n            randomArtists = [...randomArtists, {name,img}]\r\n        }\r\n        return randomArtists\r\n      })\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = this.getAccessToken(term);\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}&limit=15`, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      }\r\n    }).then(response => {\r\n   \r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      if (!jsonResponse.tracks) {\r\n        return [];\r\n      }\r\n      return jsonResponse.tracks.items.map(track => ({\r\n        id: track.id,\r\n        name: track.name,\r\n        artist: track.artists[0].name,\r\n        album: track.album.name,\r\n        uri: track.uri,\r\n        img: track.album.images[1] ? track.album.images[1].url : \"https://static.thenounproject.com/png/340719-200.png\"\r\n      }));\r\n    });\r\n\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    const headers = {\r\n      Authorization: `Bearer ${accessToken}`\r\n    };\r\n    let userId;\r\n    let playlistId;\r\n    if (!name) {\r\n      swal(\"Saving failure!\", \"Please specify the playlist name!\", \"error\");\r\n      return false\r\n    } else fetch('https://api.spotify.com/v1/me', {\r\n      headers: headers\r\n    }).then(response => response.json()).then(jsonResponse => {\r\n      userId = jsonResponse.id;\r\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n        headers: headers,\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          name: name\r\n        })\r\n      }).then(response => response.json()).then(jsonResponse => {\r\n        playlistId = jsonResponse.id;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n          headers: headers,\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            uris: trackUris\r\n          })\r\n        });\r\n      }, swal(\"Done!\", \"Playlist was added to Spotify!\", \"success\"))\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport default Spotify;","import Spotify from \"../../util/spotify\"\r\n\r\n\r\nexport default function search_tracks(value, playListTracks) {\r\n  return function (dispatch) {\r\n    if (value !== \"\" && value !== null) {\r\n      Spotify.search(value).then(response => {\r\n        if (!response.length) {\r\n          dispatch({\r\n            type: \"SEARCH_TRACKS\",\r\n            search_tracks: false,\r\n            recommendations: []\r\n          })\r\n        } else if (playListTracks.length) {\r\n          const filteredResponse = [...response].reduce((acc, currValue) => {\r\n            const ifInPlaylist = playListTracks.some(track => track.id === currValue.id)\r\n            if (!ifInPlaylist) {\r\n              acc = [...acc, currValue]\r\n            }\r\n            return acc\r\n          }, [])\r\n          Spotify.recommendArtists(response[0].artist)\r\n            .then(responseRec => {\r\n              dispatch({\r\n                type: \"SEARCH_TRACKS\",\r\n                search_tracks: filteredResponse,\r\n                recommendations: responseRec\r\n              })\r\n            })\r\n\r\n        } else {\r\n          Spotify.recommendArtists(response[0].artist)\r\n            .then(responseRec => {\r\n              dispatch({\r\n                type: \"SEARCH_TRACKS\",\r\n                search_tracks: response,\r\n                recommendations: responseRec\r\n              })\r\n            })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}","import React, {Fragment}         from 'react';\r\nimport './SearchBar.css';\r\nimport {styles}                  from \"../../Fonts_styles/font_styles\"\r\nimport setActivePage             from \"../../Reducers/Actions/setActivePage\"\r\nimport search_tracks             from \"../../Reducers/Actions/search_tracks\"\r\nimport {connect}                 from 'react-redux'\r\nimport $                         from 'jquery'; \r\n\r\n\r\nclass SearchBar extends React.Component{\r\n   constructor(props){\r\n      super(props)\r\n      this.onMouseSearch = this.onMouseSearch.bind(this)\r\n      this.onEnterSearch = this.onEnterSearch.bind(this)\r\n      this.inputValue = React.createRef();\r\n   }\r\n\r\ncomponentDidMount(){\r\n  this.inputValue.current.value = localStorage.getItem(\"search_value\")\r\n}\r\n\r\nonMouseSearch(){\r\n   const query = this.inputValue.current.value\r\n   if(query !== \"\" && query !== null){\r\n      $(\"#loading_animation\").show()\r\n   localStorage.setItem(\"search_value\",query)\r\n   this.props.search_tracks(query,this.props.playListTracks)\r\n   }else return false\r\n}\r\nonEnterSearch(event){\r\n   if(event.keyCode === 13){\r\n      this.onMouseSearch()\r\n   }\r\n}\r\n\r\nrender(){\r\n\r\n  const counter = this.props.playListTracks.length\r\n\r\n  return (\r\n  <Fragment>\r\n     <div className = \"search_wrapper\">\r\n         <input ref={this.inputValue} placeholder=\"Enter A Song, Album, or Artist\"  onKeyUp={this.onEnterSearch} />\r\n         <span className=\"material-icons search_icon\" onClick = {this.onMouseSearch}>\r\n            search\r\n        </span>\r\n     </div>\r\n\r\n     <div className =\"option_buttons\">\r\n        <button className=\"option_button\" style ={styles.searchButton}   \r\n                onClick ={this.props.setActivePage.bind(this,\"search\")}>\r\n                Results\r\n        </button>\r\n        <button className=\"option_button\"  style ={styles.searchButton}  \r\n                onClick ={this.props.setActivePage.bind(this,\"playlist\")}>\r\n                Playlist\r\n         {counter  > 0 && <span id=\"searchBar_counter\">{counter}</span>}\r\n        </button>\r\n     </div>\r\n     </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n   return {\r\n       playListTracks:state.tracks.playListTracks\r\n   }\r\n }\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n   return{\r\n      setActivePage:(page)=>{\r\n           dispatch(setActivePage(page))\r\n       }, \r\n       search_tracks:(value,playListTracks)=>{\r\n         dispatch(search_tracks(value,playListTracks))\r\n     },\r\n\r\n}\r\n }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchBar);\r\n\r\n","export default function setActivePage(page){\r\n    return {\r\n        type:\"ACTIVE_PAGE\",\r\n        page\r\n        }\r\n}","import React           from 'react';\r\nimport './recommendations.css';\r\nimport search_tracks   from \"../../Reducers/Actions/search_tracks\"\r\nimport {connect}       from 'react-redux'\r\nimport $               from 'jquery'; \r\n\r\n\r\n\r\nconst Recommendations = props => {\r\n\r\n  function recommendSearch(name){\r\n    $(\"#loading_animation\").show()\r\n      window.scrollTo({top: 0,behavior: 'smooth'});\r\n       setTimeout(() => {\r\n          props.search_tracks(name,props.playListTracks)\r\n        }, 300);\r\n  }\r\n\r\n    return ( <section className=\"rec_wrapper\">\r\n                        <h2 className=\"rec_heading\">Other Artists you might like</h2>\r\n                        <div className =\"rec_artists-wrapper\">\r\n                             {props.recommendations.map(track => (\r\n                             <div key = {track.name} onClick={recommendSearch.bind(this,track.name)} className=\"rec_artist\">\r\n                                 <p className=\"rec_artist-name\">{track.name}</p>\r\n                                 <img className=\"rec_artist-img\" alt ={track.name} src = {track.img}/>\r\n                             </div>)\r\n                             )}\r\n                         </div>\r\n             </section>)\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        playListTracks:state.tracks.playListTracks,\r\n        recommendations:state.tracks.recommendations\r\n    }\r\n  }\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        search_tracks:(value,playListTracks)=>{\r\n          dispatch(search_tracks(value,playListTracks))\r\n      },\r\n }\r\n}\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(Recommendations);\r\n\r\n\r\n","import  React                      from 'react';\r\nimport  './Track.css';\r\nimport  {styles}                   from \"../../Fonts_styles/font_styles\"\r\nimport  {connect}                  from 'react-redux'\r\nimport  {TimelineLite,}            from 'gsap/all';\r\nimport  addTrackToPlayList         from \"../../Reducers/Actions/addTrackToPlaylist\"\r\n\r\nconst animateAdd = new TimelineLite()\r\n\r\n\r\nconst  SearchTrack = props => {\r\n  let trackCover = React.createRef();\r\n  function onAddTrack(id){\r\n      animateAdd.to(trackCover, .3, {scale:1.02})\r\n                .to(trackCover,.3,{scale:0,rotation: 100})\r\n      animateAdd.eventCallback(\"onComplete\",() => {\r\n                  props.addTrackToPlayList(id) \r\n  })\r\n}\r\n  return (\r\n    <div ref={div => trackCover = div} className=\"searchTrack-wrapper\" >\r\n         <img  src =\"./add.jpg\" alt=\"AddTrack\" className=\"action-addTrack\" onClick = {onAddTrack.bind(this,props.id)} />\r\n         <img  className = \"searchTrack-image\" src = {props.img} alt={props.name} />\r\n         <div className=\"searchTrack_info-cover\" style={{backgroundColor:styles.colors.bg_main,zIndex:2}}>\r\n             <h3 style ={styles.track_name}>{props.name}</h3>\r\n             <p style ={styles.track_description}>{props.artist} | {props.album} </p>\r\n         </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return{\r\n    addTrackToPlayList:(id)=>{\r\n        dispatch(addTrackToPlayList(id))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(SearchTrack);\r\n","\r\n\r\nexport default function addTrackToPlayList(id){\r\n    return {\r\n  type:\"ADD_TRACK_TO_PLAYLIST\",\r\n  id\r\n  }\r\n}","import React,{Fragment}                 from 'react';\r\nimport './SearchResults.css';\r\nimport Recommendations       from \"./Recommendations\"\r\nimport SearchTrack           from \"../Tracks/SearchTrack\"\r\nimport {connect}             from 'react-redux'\r\nimport $                     from 'jquery'; \r\n\r\n\r\n\r\n\r\n\r\nclass SearchResults extends React.Component {\r\n\r\n componentDidUpdate(){\r\n     $(\"#loading_animation\").hide()\r\n }\r\n\r\n componentDidMount(){\r\n     $(\"#loading_animation\").hide()\r\n}\r\n\r\n render(){\r\n    return (\r\n       <Fragment>\r\n       {this.props.searchResults\r\n       ?<section className=\"searchResults-wrapper\">\r\n         <h2 className=\"hidden\">Section - searching  artists</h2>\r\n               {this.props.searchResults.map(track => <SearchTrack  uri = {track.uri} key ={track.id} \r\n                                                  name={track.name} album = {track.album} artist={track.artist} id={track.id}\r\n                                                  img ={track.img}  />)}\r\n        </section>\r\n      :<div className={\"no_results-message\"}>Nothing has been found with your Search request</div>}\r\n\r\n       {this.props.recommendations.length > 0 && <Recommendations/>}\r\n       </Fragment>\r\n     )\r\n  }\r\n}\r\n\r\n  function mapStateToProps(state){\r\n    return {\r\n        searchResults:state.tracks.searchResults,\r\n        recommendations:state.tracks.recommendations\r\n    }\r\n  }\r\n\r\n export default connect(mapStateToProps)(SearchResults );\r\n\r\n\r\n","import  React               from 'react';\r\nimport  './Track.css';\r\nimport  removePlaylistTrack from \"../../Reducers/Actions/removePlaylistTrack\"\r\nimport  {styles}            from \"../../Fonts_styles/font_styles\"\r\nimport  {connect}           from 'react-redux'\r\nimport  {TimelineLite}      from 'gsap/all';\r\n\r\nconst animateDelete = new TimelineLite()\r\n\r\n\r\n\r\nconst PlayListTrack = props => {\r\n\r\n  let playlist_info = React.createRef();\r\n\r\n  function handleRemoveTrack(id){\r\n      animateDelete.to(playlist_info, .3, { transformOrigin:\"left top\",scale:1.02})\r\n                   .to(playlist_info, .3,{scale:0,rotation: 3})\r\n      animateDelete.eventCallback(\"onComplete\",function(){\r\n          props.removePlaylistTrack(id)\r\n      })\r\n  }\r\nreturn (\r\n  <div className=\"PL_track-wrapper\">\r\n      <div ref ={div => playlist_info = div}>\r\n          <h3 style ={styles.playlist_heading}>{props.name}</h3>\r\n          <p style ={{fontFamily:styles.fonts.main}}>{props.artist} | {props.album}</p>\r\n      </div>\r\n      <div css={{textAlign:\"right\"}}>\r\n          <i className=\"material-icons  action_deleteTrack\" onClick = {handleRemoveTrack.bind(this,props.id)}>delete</i>\r\n      </div>\r\n  </div >)\r\n\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return{\r\n    removePlaylistTrack:(id)=>{\r\n        dispatch(removePlaylistTrack(id))\r\n    }\r\n  }\r\n}\r\nexport default connect(null,mapDispatchToProps)(PlayListTrack);\r\n","export default function removePlaylistTrack(id){\r\n    return {\r\n  type:\"REMOVE_PLAYLIST_TRACK\",\r\n  id\r\n  }\r\n}","import React,{Fragment}          from 'react';\r\nimport './Playlist.css';\r\nimport {styles}                  from \"../../Fonts_styles/font_styles\"\r\nimport PlayListTrack             from \"../Tracks/PlayListTrack\"\r\nimport delete_playlist           from \"../../Reducers/Actions/delete_playlist\"\r\nimport Spotify                   from \"../../util/spotify\"\r\nimport {connect}                 from 'react-redux'\r\nimport swal                      from 'sweetalert';\r\n\r\n\r\n\r\n\r\n\r\nconst Playlist = props =>  {\r\n\r\n  let playListName = React.createRef()\r\n\r\n  function handleDeletePlaylist(){\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"This action gonna delete all tracks in current playlist...\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n        .then((willDelete) => {\r\n         if (willDelete) {\r\n          swal(\"Success!Playlist is cleared out...\", {\r\n          title: \"Deleted!\",\r\n          buttons: false,\r\n          timer: 1000,\r\n        });\r\n        props.delete_playlist()\r\n      }\r\n    });\r\n   }\r\n\r\n function handleSaveToSpotify(){\r\n        const name = playListName.current.value\r\n        const uris = props.playListTracks.map(track => track.uri)\r\n          if(Spotify.savePlaylist(name,uris)!== false){\r\n             return props.delete_playlist()\r\n           }\r\n  }\r\n\r\n    return (\r\n     <Fragment>\r\n        {props.playListTracks.length > 0  &&\r\n           <div className=\"playlist_Wrapper\">\r\n                    <input placeholder={\"New Playlist\"} ref={playListName}\r\n                     style= {{fontFamily:styles.fonts.main}}\r\n                     className=\"playlist_input\"/>\r\n\r\n                    {props.playListTracks.map(track => <PlayListTrack \r\n                                                   uri = {track.uri} id={track.id} album = {track.album} \r\n                                             key={track.id}  artist={track.artist} name ={track.name}/>)}\r\n\r\n                    <button className=\"Playlist-save\" onClick={handleSaveToSpotify} style ={styles.playListButton}>\r\n                            SAVE TO SPOTIFY\r\n                    </button>\r\n                    <button className=\"Playlist-Delete\" onClick={handleDeletePlaylist} style ={styles.playListButton}>\r\n                            DELETE ALL\r\n                    </button>\r\n            </div>}\r\n\r\n         {!props.playListTracks.length && <div className={\"no_results-message\"}>Your playlist is empty.</div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n        return {\r\n            playListTracks:state.tracks.playListTracks\r\n        }\r\n }\r\n\r\n function mapDispatchToProps(dispatch){\r\n        return{\r\n        delete_playlist:()=>{\r\n            dispatch(delete_playlist())\r\n          }\r\n        }\r\n }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Playlist);\r\n\r\n\r\n\r\n\r\n","export default function delete_playlist(){\r\n    return {\r\n        type:\"DELETE_PLAYLIST\",\r\n        }\r\n}","import React     from 'react';\r\nimport {styles}  from \"../../Fonts_styles/font_styles\"\r\n\r\n\r\nconst CounterAndAnimation = props => {\r\n    return (\r\n        <React.Fragment>\r\n          <span id=\"bottomPageFixedTracksCounter\">{props.counter}</span>\r\n          <div id=\"loading_animation\">\r\n             <div id=\"loading-text\" style = {{fontFamily:styles.fonts.main}}>LOADING</div>\r\n             <div id=\"loading-content\"></div>\r\n          </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CounterAndAnimation","import React             from 'react';\nimport './App.css';\nimport {styles}          from \"../Fonts_styles/font_styles\"\nimport SearchBar         from \"../Components/SearchBar/SearchBar\"\nimport SearchResults     from \"../Components/SearchResults/SearchResults\"\nimport Playlist          from \"../Components/Playlist/Playlist\"\nimport CounterAndAnimation  from \"../Components/CounterAnimation/CounterAnimation\"\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport  {CSSPlugin, AttrPlugin}        from 'gsap/all';\nimport $                               from 'jquery'; \nimport {connect}                       from 'react-redux'\n\n\nconst plugins = [ CSSPlugin, AttrPlugin ];\n\n\nclass App extends React.Component {\n\ncomponentDidMount(){\n    let counter = $(\"#bottomPageFixedTracksCounter\")\n    window.addEventListener('scroll',function() {\n        if ($(this).scrollTop() > 150) {\n            $(counter).fadeIn(1000)\n        }else {\n            $(counter).fadeOut(1000);\n      }\n    });\n}\n\nrender(){\n return (\n  <div className=\"App\">\n      <h1 style ={styles.main_heading}>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <SearchBar/>\n       <div style={styles.main_wrapper}>\n           {this.props.activePage === \"search\" &&  <SearchResults/>}\n           {this.props.activePage === \"playlist\" && <Playlist/>}\n       </div>\n\n       <ScrollUpButton style={{zIndex:\"10\"}} />\n       <CounterAndAnimation counter = {this.props.playListTracks.length} />\n  </div>\n  );\n}\n}\n\n\nfunction mapStateToProps(state){\n  return {\n      playListTracks:state.tracks.playListTracks,\n      activePage:state.tracks.activePage\n  }\n}\n\n\nexport default connect(mapStateToProps)(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\nconst tracks_state = {\r\n    active_page:\"search\",\r\n    searchResults:[],\r\n    playListTracks:[],\r\n    recommendations:[],\r\n    activePage:\"search\"\r\n}\r\n\r\n\r\nexport default function tracks(state = tracks_state, action){\r\n     switch(action.type){\r\n       case \"SEARCH_TRACKS\":\r\n           return{...state,searchResults:action.search_tracks,\r\n                           recommendations:action.recommendations,\r\n                           activePage:\"search\"}\r\n\r\n       case \"ADD_TRACK_TO_PLAYLIST\":\r\n           const trackToAdd = state.searchResults.find(track => track.id === action.id)\r\n           const updatedSearchResults = state.searchResults.filter(track => track.id !== action.id)\r\n           return{...state,searchResults:updatedSearchResults,\r\n                           playListTracks:[...state.playListTracks,trackToAdd]}\r\n\r\n       case \"REMOVE_PLAYLIST_TRACK\":\r\n           const track = state.playListTracks.find(track => track.id === action.id)\r\n           const filteredPlaylist = state.playListTracks.filter(x => x.id !== action.id)\r\n           return{...state,searchResults:[...state.searchResults,track],\r\n                     playListTracks:filteredPlaylist}\r\n\r\n       case \"DELETE_PLAYLIST\":\r\n           return {...state,searchResults:[...state.playListTracks,...state.searchResults],playListTracks:[],}\r\n\r\n       case \"ACTIVE_PAGE\":\r\n           return {...state,activePage:action.page}\r\n\r\n       default: return state\r\n    }\r\n}","\r\nimport {combineReducers} from 'redux'\r\nimport tracks from \"./Tracks\"\r\n\r\nconst rootReducer = combineReducers({\r\n    tracks,\r\n\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './Reducers/rootReducer'\nimport thunk from \"redux-thunk\"\n\n\n const store = createStore(rootReducer,applyMiddleware(thunk));\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}